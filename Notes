1)Test case : Account Registration 
1.1: Create BasePage under "pageObjects" which includes only constructor. This will be invoked by every page object class 
constructor(Re-usability)
1.2 Create Page object Classes for HomePage,RegistrationPage under pageObjects package.
(These classes extends from BasePage)

1.3) Create AccountRegistrationTest under "testCases"
1.4)Create BaseClass under testBase package and copy re-usable methods 
1.5)Create re-usable methods to generate random numbers and strings in BaseClass.


2)Adding logs to test case(log4j2)
=================================
2.1 Add log4j2.xml file under src/test/resources
2.2 Update BaseClass
2.3 Add log statements to AccountRegistrationTest

Loggging -recording all the events in the form of text.

Nomrally There are two kinds of logs 

Application Logs
---------------
Any user performing action in the application backed side log files will be generated 
what ever the actions are done by the user or customer 
every event will be logged into the log file 
at the backend side as a user we cannot see 
in production any user is doing unauthorized action in that particular case 
they can easily track the information they can do the immediate action 
 
Automation Logs 
---------------
through the test case what ever the events are doing 
if any test case is failed then that information is also part of log file 

Log Levels

All<Trace <Debug <Info <Warn <Error <Fatal <Off


Appenders - where to generate logs (Console/File)
Loggers - what type of logs generate(All<Trace<Debug<Info<Warn<Error<Fatal<Off)

In log4j2.xml we have to specify where we have to store in console /File that we have to write down in log4j2.xml file 


In the base class we have to update the log file 

why base class bcz this is the common class required for every test case 


3)Run Test on Desired Browser /Cross Browser /Parallel
======================================================
3.1)create testng.xml file to run test cases and parameterize browser name and OS to BaseClass
setUp() method 
3.2)Update BaseClass->setUp() method launch browser based on conditions
3.3)maintain seperate xml to run test multiple browsers parallelly.



Selenium Grid
==============
Q)what is hub & What is Node ?
A)
From where you are writing test cases 
from where you are controlling entire setUp 
that is called as Hub  main system is nothing 
but hub 

Remote machine
--------------
mac
linux 
windows etc 

every operating system there are different 
browsers installed 

these are different machines called as a Node 


hub is nothing but a system from where we 
started our test cases we are running 

Node is nothing but a machine where all our 
browsers are installed 

so we have to attach all the Nodes to the grid 

once we attach all the nodes into Hub then this hub is 
able to recognize all the nodes in the grid environment 
entire setup is called grid 

from running the test case	
here we willspecify on which operating system 
on which browser we want to execute the test case 
these re the two test cases based on this 
information hub will findout which os 
and which browser it is accordingly send this 
particular test case to the particular 
node or particular browser 

here for this we cannot go with physicall meschines
so instead we have to go with virtual machies but 
with vertual machine also it is very togh bcz we have downlaod and copy 
every time so we will use docker for this 

Docker automatically we can download the images 
these machines will be available in the form of images 
in the dockor remote repositories 
dockor hub is a website in that website they will maintain all the images

we can download that image we can create a container 
this container can have all the setUp 

And now this container we will make it as a Node 
every container will act as a Node 

Standalone setup(single machine)
--------------------------------
1.Download selenium-server-4.15.0.jar and place it somewhere 
2.Run below command to start Selenium Grid 
	java-jar selenium-server-4.15.0.jar standalone
3.URL to see sessions http://localhost:4444/

Hub & Node Setup(Multiple machines):
------------------------------------
1.Download selenium-server-4.15.0.jar and place it somewhere in both (hub &node)
the machines
2.Run below command to make machine as hub 
java-jar selenium-server-4.15.0.jar hub
3.Run below command to make machine as node
	java-jar selenium-server-4.15.0.jar node --hub http://<hub-ip>:4444
4.URL to see sessions: http://localhost:4444/
































